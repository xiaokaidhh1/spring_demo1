<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
">
<!--    注册bean-->
    <bean id="userService" class="com.kai.service.UserServicelmpl"/>
    <bean id="log" class="com.kai.log.Log"/>
    <bean id="afterLog" class="com.kai.log.AfterLog"/>

<!--&lt;!&ndash;方式一：使用原始spring API 接口&ndash;&gt;-->
<!--&lt;!&ndash;    配置aop,先要在上方导入aop的约束&ndash;&gt;-->
<!--    <aop:config>-->
<!--&lt;!&ndash;        切入点,expression:表达式 execution(要执行的位置* * *)&ndash;&gt;-->
<!--        <aop:pointcut id="pointcut" expression="execution(* com.kai.service.UserServicelmpl.*(..))"/>-->
<!--&lt;!&ndash;    执行环绕增加&ndash;&gt;-->
<!--        <aop:advisor advice-ref="log" pointcut-ref="pointcut"/>-->
<!--        <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>-->

<!--    </aop:config>-->



<!--&lt;!&ndash;    方式二，自定义的类&ndash;&gt;-->
<!--    <bean id="diy" class="com.kai.diy.DiyPoointCut"/>-->
<!--    <aop:config>-->
<!--&lt;!&ndash;        自定义切面，ref要引用的类&ndash;&gt;-->
<!--        <aop:aspect ref="diy">-->
<!--            &lt;!&ndash;                    切入点&ndash;&gt;-->
<!--            <aop:pointcut id="point" expression="execution(* com.kai.service.UserServicelmpl.*(..))"/>-->
<!--            &lt;!&ndash;        通知&ndash;&gt;-->
<!--            <aop:before method="before" pointcut-ref="point"/>-->
<!--            <aop:after method="after" pointcut-ref="point"/>-->
<!--        </aop:aspect>-->
<!--    </aop:config>-->


<!--    方式三-->

    <bean id="annoPointCut" class="com.kai.diy.AnnoPointCut"/>
<!--   开启注解支持-->
    <aop:aspectj-autoproxy/>

</beans>

